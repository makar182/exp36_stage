name: Deploy via Docker Compose

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref (tag or branch) to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: root@79.143.30.146
      DEPLOY_DIRECTORY: /root/apps/exp36_stage
    steps:
      - name: Determine ref to deploy
        id: deployment_ref
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ref="${{ github.event.inputs.ref }}"
            if [ -z "$ref" ]; then
              echo "error: ref input is required"
              exit 1
            fi
          else
            ref="${{ github.sha }}"
          fi

          echo "ref=$ref" >> "$GITHUB_OUTPUT"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.deployment_ref.outputs.ref }}
          fetch-depth: 0

      - name: Verify git ref exists
        if: github.event_name == 'workflow_dispatch'
        run: |
          git fetch --all --tags --prune
          if ! git rev-parse --verify --quiet "${{ steps.deployment_ref.outputs.ref }}" > /dev/null; then
            echo "error: ref '${{ steps.deployment_ref.outputs.ref }}' not found"
            exit 1
          fi

      - name: Deploy to VM
        run: |
          sudo apt-get install -y ssh rsync
          printf '%s\n' "$DEPLOY_SSH_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"
          rsync -avz -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' --exclude='.git' ./ ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }}
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Apply docker compose deployment
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "\
            set -euo pipefail; \
            cd ${{ env.DEPLOY_DIRECTORY }}; \
            docker compose pull || true; \
            docker compose down --remove-orphans; \
            docker compose up -d --build; \
          "

      - name: Clean up SSH key
        if: always()
        run: |
          rm -f deploy_key.pem
